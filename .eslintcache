[{"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/reportWebVitals.js":"1","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/App.js":"2","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/index.js":"3","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Controls.js":"4","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Clock.js":"5","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/utils.js":"6","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/AudioAnalyser.js":"7","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/AudioVisualiser.js":"8","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Fader.js":"9","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Meter.js":"10","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Panner.js":"11","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Channel.js":"12","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Track.js":"13","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Mixer.js":"14","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/context/Audio.js":"15","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Home.js":"16","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Vu.js":"17","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/TestComponent.js":"18","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Loader.js":"19","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/index.js":"20","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/TestComponent.js":"21","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Mixer.js":"22","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Track.js":"23","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Clock.js":"24","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/utils.js":"25","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Panner.js":"26","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/context/Audio.js":"27","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Controls.js":"28","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Fader.js":"29","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Loader.js":"30","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/App.js":"31","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Channel.js":"32","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Vu.js":"33","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Meter.js":"34","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Home.js":"35","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/libs/createPlaybackTrack.js":"36","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/libs/audio.js":"37","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/libs/createMasterTrack.js":"38","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/reportWebVitals.js":"39","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/libs/createInputTrack.js":"40","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/hooks/useQueryParams.js":"41"},{"size":362,"mtime":1611525355760,"results":"42","hashOfConfig":"43"},{"size":832,"mtime":1612098203818,"results":"44","hashOfConfig":"43"},{"size":500,"mtime":1612028630362,"results":"45","hashOfConfig":"43"},{"size":1346,"mtime":1615216446646,"results":"46","hashOfConfig":"43"},{"size":1212,"mtime":1611543945032,"results":"47","hashOfConfig":"43"},{"size":4068,"mtime":1612034640959,"results":"48","hashOfConfig":"43"},{"size":1101,"mtime":1611544801634,"results":"49","hashOfConfig":"43"},{"size":1111,"mtime":1611545277878,"results":"50","hashOfConfig":"43"},{"size":1186,"mtime":1612106653056,"results":"51","hashOfConfig":"43"},{"size":774,"mtime":1615213220080,"results":"52","hashOfConfig":"43"},{"size":2619,"mtime":1615211064937,"results":"53","hashOfConfig":"43"},{"size":1491,"mtime":1615218358077,"results":"54","hashOfConfig":"43"},{"size":273,"mtime":1612098192538,"results":"55","hashOfConfig":"43"},{"size":784,"mtime":1615219294520,"results":"56","hashOfConfig":"43"},{"size":10618,"mtime":1615220656495,"results":"57","hashOfConfig":"43"},{"size":1295,"mtime":1612106706052,"results":"58","hashOfConfig":"43"},{"size":2007,"mtime":1612096689887,"results":"59","hashOfConfig":"43"},{"size":1690,"mtime":1612091610273,"results":"60","hashOfConfig":"43"},{"size":211,"mtime":1612019178648,"results":"61","hashOfConfig":"43"},{"size":500,"mtime":1615484824432,"results":"62","hashOfConfig":"63"},{"size":1690,"mtime":1615287088684,"results":"64","hashOfConfig":"63"},{"size":765,"mtime":1615394501239,"results":"65","hashOfConfig":"63"},{"size":273,"mtime":1615382232401,"results":"66","hashOfConfig":"63"},{"size":1378,"mtime":1615485631635,"results":"67","hashOfConfig":"63"},{"size":4068,"mtime":1615287088692,"results":"68","hashOfConfig":"63"},{"size":2619,"mtime":1615287088683,"results":"69","hashOfConfig":"63"},{"size":8581,"mtime":1615555070424,"results":"70","hashOfConfig":"63"},{"size":1843,"mtime":1615488365055,"results":"71","hashOfConfig":"63"},{"size":1210,"mtime":1615484115263,"results":"72","hashOfConfig":"63"},{"size":305,"mtime":1615323754028,"results":"73","hashOfConfig":"63"},{"size":654,"mtime":1615485322925,"results":"74","hashOfConfig":"63"},{"size":1942,"mtime":1615394870215,"results":"75","hashOfConfig":"63"},{"size":2007,"mtime":1615287088684,"results":"76","hashOfConfig":"63"},{"size":774,"mtime":1615287088683,"results":"77","hashOfConfig":"63"},{"size":1295,"mtime":1615487563385,"results":"78","hashOfConfig":"63"},{"size":1659,"mtime":1615554116886,"results":"79","hashOfConfig":"63"},{"size":4514,"mtime":1615555637833,"results":"80","hashOfConfig":"63"},{"size":1038,"mtime":1615398638405,"results":"81","hashOfConfig":"63"},{"size":362,"mtime":1615287088690,"results":"82","hashOfConfig":"63"},{"size":1871,"mtime":1615399655451,"results":"83","hashOfConfig":"63"},{"size":1030,"mtime":1615553755197,"results":"84","hashOfConfig":"63"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"6ni04",{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"xqqwo4",{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"136"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"142"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/reportWebVitals.js",[],["187","188"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/App.js",["189"],"import React from \"react\";\nimport Home from \"./components/Home\";\nimport AudioContextProvider from \"./context/Audio\";\n\nimport TestComponent from \"./components/TestComponent\";\n\nimport \"./fonts/digital-7.eot\";\nimport \"./fonts/digital-7.svg\";\nimport \"./fonts/digital-7.ttf\";\nimport \"./fonts/digital-7.woff\";\n\nimport \"./stylesheets/normalize.css\";\nimport \"./stylesheets/normalize-edit.css\";\nimport \"./stylesheets/fonts.css\";\nimport \"./stylesheets/loader.css\";\nimport \"./stylesheets/main.css\";\n\nconst App = () => {\n  return (\n    <>\n      <AudioContextProvider>\n        <div className=\"App\">\n          <header>\n            <h1>Stokkmaur</h1>\n          </header>\n          <Home />\n          {/* <TestComponent /> */}\n        </div>\n      </AudioContextProvider>\n      <div id=\"audio-container\"></div>\n    </>\n  );\n};\n\nexport default App;\n",["190","191"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/index.js",[],["192","193"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Controls.js",["194","195","196"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Clock.js",[],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/utils.js",[],["197","198"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/AudioAnalyser.js",[],["199","200"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/AudioVisualiser.js",[],["201","202"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Fader.js",[],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Meter.js",[],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Panner.js",[],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Channel.js",[],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Track.js",[],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Mixer.js",[],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/context/Audio.js",["203"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Home.js",[],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Vu.js",["204"],"import React, { useContext, useState, useRef, useEffect } from \"react\";\nimport { AudioContext } from \"../context/Audio\";\nimport { dBFSCalc, scale } from \"../utils\";\n\nconst nodeMap = {\n  left: \"analyserNodeL\",\n  right: \"analyserNodeR\",\n};\n\nconst Vu = (props) => {\n  const analyserNodeName = nodeMap[props.channel];\n  const [deg, setDeg] = useState(0);\n  const animationRef = useRef(null);\n  const audioContext = useContext(AudioContext);\n  const masterTrack = audioContext.getMasterTrack();\n  const bufferLength = masterTrack[analyserNodeName].fftSize;\n  const animationData = useRef(new Uint8Array(bufferLength));\n  let vuData = [];\n\n  const animate = () => {\n    const len = animationData.current.length;\n    let newDbfs = new Array(len);\n\n    masterTrack[analyserNodeName].getByteTimeDomainData(animationData.current);\n\n    for (let i = 0; i < len; ++i) {\n      newDbfs[i] = (animationData.current[i] * 2) / 255 - 1;\n    }\n\n    // TODO: set to -192 if not playing, could not get playing state from context here, it was always false\n    newDbfs = dBFSCalc(newDbfs);\n    let newDeg = Math.max(-20, scale(newDbfs + 20, -20, 0, 0, 60));\n\n    vuData.unshift(newDeg);\n\n    if (vuData.length >= 18) {\n      vuData.length = 18;\n    }\n\n    newDeg =\n      vuData.reduce((sum, curr) => {\n        return sum + curr;\n      }, 0) / vuData.length;\n\n    setDeg(newDeg);\n\n    animationRef.current = requestAnimationFrame(animate);\n  };\n\n  useEffect(() => {\n    animationRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(animationRef.current);\n  }, []);\n\n  return (\n    <div className=\"vu\">\n      <div className=\"mask\">\n        <div\n          className={`needle ${props.channel}`}\n          style={{\n            WebkitTransform: `rotate(${deg}deg)`,\n            MozTransform: `rotate(${deg}deg)`,\n            transform: `rotate(${deg}deg)`,\n          }}\n        ></div>\n      </div>\n      <p className=\"vu-label\">{props.channel[0].toUpperCase()}</p>\n    </div>\n  );\n};\n\nexport default Vu;\n",["205","206"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/TestComponent.js",["207"],"import React, { useContext, useRef, useEffect } from \"react\";\n\nimport { AudioContext } from \"../context/Audio\";\n\nconst TestComponent = () => {\n  const audioContext = useContext(AudioContext);\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const masterTrack = audioContext.getMasterTrack();\n  const bufferLength = masterTrack.analyserNodeL.fftSize;\n  const animationData = useRef(new Uint8Array(bufferLength));\n\n  // TODO: start / stop animation with audio start / stop if that is necessary for performance\n  const animate = () => {\n    const width = 200;\n    const height = 200;\n    const canvas = canvasRef.current;\n    const canvasCtx = canvas.getContext(\"2d\");\n\n    masterTrack.analyserNodeL.getByteTimeDomainData(animationData.current);\n\n    canvasCtx.fillStyle = \"rgb(200, 200, 200)\";\n    canvasCtx.fillRect(0, 0, width, height);\n\n    canvasCtx.lineWidth = 2;\n    canvasCtx.strokeStyle = \"rgb(0, 0, 0)\";\n\n    const sliceWidth = (width * 1.0) / bufferLength;\n    let x = 0;\n\n    canvasCtx.beginPath();\n    for (var i = 0; i < bufferLength; i++) {\n      const v = animationData.current[i] / 128.0;\n      const y = (v * height) / 2;\n\n      if (i === 0) canvasCtx.moveTo(x, y);\n      else canvasCtx.lineTo(x, y);\n\n      x += sliceWidth;\n    }\n\n    canvasCtx.lineTo(width, height / 2);\n    canvasCtx.stroke();\n    animationRef.current = requestAnimationFrame(animate);\n  };\n\n  useEffect(() => {\n    animationRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(animationRef.current);\n  }, []);\n\n  return (\n    <div style={{ color: \"white\" }}>\n      <canvas ref={canvasRef}></canvas>\n    </div>\n  );\n};\n\nexport default TestComponent;\n",["208","209"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Loader.js",[],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/index.js",[],["210","211"],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/TestComponent.js",["212"],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Mixer.js",["213"],"import React, { useContext, useEffect } from \"react\";\n\nimport Channel from \"./Channel\";\nimport Track from \"./Track\";\nimport Vu from \"./Vu\";\n\nimport { AudioContext } from \"../context/Audio\";\n\nconst Mixer = () => {\n  const audioContext = useContext(AudioContext);\n  const tracks = audioContext.getTracks();\n  return (\n    <div id=\"mixer\">\n      {tracks &&\n        tracks.length > 0 &&\n        tracks.map((track) => {\n          return <Channel key={track.id} track={track} />;\n        })}\n\n      <div id=\"meters\">\n        <Vu channel=\"left\" master={true} />\n        <Vu channel=\"right\" master={true} />\n      </div>\n\n      <div id=\"master\">\n        <Track master={true} />\n        <p className=\"label\">Master</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Mixer;\n",["214","215"],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Track.js",[],["216","217"],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Clock.js",[],["218","219"],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/utils.js",[],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Panner.js",[],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/context/Audio.js",["220","221","222"],"// buffer source -> mute -> gain -> pan -> (track analyser) -> master gain -> splitter -> (master analyser x 2 VU) -> merger -> dest\nimport React, { useState, useEffect, useRef } from \"react\";\n\n// Hooks\nimport useQueryParam from \"../hooks/useQueryParams\";\n\n// Libs\nimport createMasterTrack from \"../libs/createMasterTrack\";\nimport createPlaybackTrack from \"../libs/createPlaybackTrack\";\nimport createInputTrack from \"../libs/createInputTrack\";\nimport { createAsyncBufferSource, exportWAV } from \"../libs/audio\";\n\n// Components\nimport Loader from \"../components/Loader\";\n\n// Config\nimport config from \"../config.json\";\n\nlet audioCtx = null;\n\ntry {\n  window.AudioContext =\n    window.AudioContext ||\n    window.webkitAudioContext ||\n    window.mozAudioContext ||\n    window.msAudioContext;\n  navigator.getUserMedia =\n    navigator.getUserMedia ||\n    navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia ||\n    navigator.msGetUserMedia;\n  window.URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n  audioCtx = new window.AudioContext();\n} catch (e) {\n  window.alert(\"Your browser does not support WebAudio, try Google Chrome\");\n}\n\nexport const AudioContext = React.createContext();\n\nconst AudioContextProvider = ({ children }) => {\n  const currentTime = useRef(0);\n  const startedAt = useRef(0);\n  const pausedAt = useRef(0);\n  const [song, setSong] = useQueryParam(\"song\", \"phoenix\");\n  const recording = useRef(false);\n  const recordedChunks = useRef([]);\n  const [masterTrack, setMasterTrack] = useState(null);\n  const [tracks, setTracks] = useState(null);\n  const [playing, setPlaying] = useState(false);\n  const [mutedTracks, setMutedTracks] = useState([]);\n  const [loadProgress, setLoadProgress] = useState(0);\n\n  useEffect(() => {\n    const onLoad = async () => {\n      const masterNode = createMasterNode();\n      const playbackTracks = await loadAudio(masterNode);\n      const inputTracks = await createInputNode(masterNode);\n      setTracks([...playbackTracks, ...inputTracks]);\n    };\n\n    onLoad();\n\n    return () => {\n      audioCtx && audioCtx.close();\n      tracks &&\n        tracks.forEach((track) => {\n          if (track.recorder) {\n            track.recorder.removeEventListener(\n              \"dataavailable\",\n              handleRecordedData\n            );\n          }\n        });\n    };\n  }, []);\n\n  const createMasterNode = () => {\n    const masterNode = createMasterTrack(audioCtx);\n    setMasterTrack(masterNode);\n    return masterNode;\n  };\n\n  const loadAudio = async (masterNode) => {\n    let newTracks = [];\n    let count = 1;\n\n    for (const track of config.songs[song].tracks) {\n      const progress = count / config.songs[song].tracks.length;\n      setLoadProgress(progress);\n      count++;\n      if (!track) {\n        return;\n      }\n      const newTrack = await createPlaybackTrack(\n        audioCtx,\n        masterNode,\n        song,\n        track\n      );\n      newTracks.push(newTrack);\n    }\n    return newTracks;\n    // createInputNode(masterNode, newTracks);\n  };\n\n  const createInputNode = async (masterNode) => {\n    const newInputTrack = await createInputTrack(audioCtx, masterNode);\n    setMutedTracks([...mutedTracks, newInputTrack.id]);\n\n    newInputTrack.recorder.addEventListener(\n      \"dataavailable\",\n      handleRecordedData\n    );\n\n    return [newInputTrack];\n  };\n\n  const getCurrentTime = () => {\n    if (pausedAt.current) {\n      currentTime.current = pausedAt.current;\n      return pausedAt.current;\n    }\n    // if (startedAt.current) {\n    currentTime.current = audioCtx.currentTime - startedAt.current;\n    return audioCtx.currentTime - startedAt.current;\n    // }\n    // return 0;\n  };\n\n  const exportAudio = () => {\n    console.log(\"Exporting ...\");\n  };\n\n  const recordStart = (track) => {\n    backToStart();\n    recording.current = true;\n    track.recorder.startTime = audioCtx.currentTime;\n    track.recorder.start();\n  };\n\n  const recordStop = async (track) => {\n    recording.current = false;\n    track.recorder.stop();\n    console.log(recordedChunks.current);\n\n    setTimeout(async () => {\n      const blob = new Blob(recordedChunks.current, {\n        type: \"audio/ogg; codecs=opus\",\n      });\n      const audioArrayBuffer = await blob.arrayBuffer();\n      const decodedAudio = await createAsyncBufferSource(\n        audioCtx,\n        audioArrayBuffer\n      );\n      const bufferSource = audioCtx.createBufferSource();\n      bufferSource.buffer = decodedAudio;\n\n      track.buffer = bufferSource;\n      track.type = \"playback\";\n      playBufferNode(track, 0);\n      pauseAll();\n\n      recordedChunks.current = [];\n    }, 1000);\n  };\n\n  const handleRecordedData = async (e) => {\n    const allChunks = [...recordedChunks.current, e.data];\n    recordedChunks.current = allChunks;\n  };\n\n  const playBufferNode = (track, offset) => {\n    const bufferSource = audioCtx.createBufferSource();\n    bufferSource.buffer = track.decodedAudio;\n    track.buffer = bufferSource;\n    track.buffer.connect(track.muteNode);\n    track.buffer.start(0, offset);\n  };\n\n  const playAll = () => {\n    if (audioCtx.state === \"suspended\") {\n      audioCtx.resume();\n    }\n    const offset = pausedAt.current;\n\n    tracks.forEach((track) => {\n      if (track.type === \"playback\") {\n        playBufferNode(track, offset);\n      }\n    });\n    startedAt.current = audioCtx.currentTime - offset;\n    pausedAt.current = 0;\n    setPlaying(true);\n  };\n\n  const pauseAll = () => {\n    const elapsed = audioCtx.currentTime - startedAt.current;\n    tracks.forEach((track) => {\n      if (track.type === \"playback\") {\n        track.buffer.stop();\n      }\n    });\n    pausedAt.current = elapsed;\n    setPlaying(false);\n  };\n\n  const togglePlayAll = () => {\n    if (!playing) {\n      playAll();\n    } else {\n      pauseAll();\n    }\n  };\n\n  // TODO: implement with buffer\n  const rewind = () => {\n    let newTime = currentTime.current - 5; // One second\n    if (newTime <= 0) {\n      newTime = 0;\n    }\n    tracks.forEach((track) => {\n      if (track.type === \"playback\") {\n        track.elem.currentTime = newTime;\n      }\n    });\n    currentTime.current = newTime;\n  };\n\n  // TODO: implement with buffer\n  const forward = () => {\n    let newTime = currentTime.current + 5; // One second\n    const maxTime = tracks[0].elem.duration;\n    if (newTime >= maxTime - 1) {\n      newTime = maxTime - 1;\n    }\n    tracks.forEach((track) => {\n      if (track.type === \"playback\") {\n        track.elem.currentTime = newTime;\n      }\n    });\n    currentTime.current = newTime;\n  };\n\n  const backToStart = () => {\n    pausedAt.current = 0;\n    startedAt.current = 0;\n    tracks.forEach((track) => {\n      if (track.type === \"playback\") {\n        track.buffer.stop(0);\n      }\n    });\n    if (playing) {\n      playAll();\n    }\n  };\n\n  const setMasterGain = (gain) => {\n    masterTrack.gainNode.gain.value = gain;\n  };\n\n  const toggleSolo = (id, solo) => {\n    if (solo) {\n      tracks.forEach((track) => {\n        if (track.id === id) {\n          track.solo = true;\n          return;\n        }\n        track.muteNode.gain.value = 0;\n        track.solo = false;\n        track.mute = true;\n      });\n    } else {\n      tracks.forEach((track) => {\n        // Keep muted tracks muted after un-solo\n        if (mutedTracks.indexOf(track.id) !== -1) {\n          return;\n        } else {\n          track.muteNode.gain.value = 1;\n          track.solo = false;\n        }\n      });\n    }\n  };\n\n  const toggleMute = (id, mute) => {\n    // TODO: do this more efficently\n    tracks.forEach((track) => {\n      if (track.id === id) {\n        if (mute) {\n          track.muteNode.gain.value = 0;\n          setMutedTracks([...mutedTracks, track.id]);\n        }\n\n        if (!mute) {\n          track.muteNode.gain.value = 1;\n          const newMutedTracks = [...mutedTracks].filter((trackId) => {\n            return trackId !== id;\n          });\n          setMutedTracks(newMutedTracks);\n        }\n      }\n    });\n  };\n\n  return (\n    <AudioContext.Provider\n      value={{\n        togglePlayAll,\n        playing: () => playing,\n        getTracks: () => tracks,\n        getMasterTrack: () => masterTrack,\n        setMasterGain,\n        getAudioContext: () => audioCtx,\n        toggleSolo,\n        toggleMute,\n        backToStart,\n        rewind,\n        forward,\n        exportAudio,\n        recordStart,\n        recordStop,\n        getCurrentTime,\n      }}\n    >\n      {tracks && tracks.length > 0 ? (\n        children\n      ) : (\n        <Loader progress={loadProgress} />\n      )}\n    </AudioContext.Provider>\n  );\n};\n\nexport default AudioContextProvider;\n","/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Controls.js",[],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Fader.js",[],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Loader.js",[],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/App.js",[],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Channel.js",[],["223","224"],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Vu.js",["225"],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Meter.js",[],["226","227"],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/components/Home.js",[],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/libs/createPlaybackTrack.js",[],["228","229"],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/libs/audio.js",[],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/libs/createMasterTrack.js",[],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/reportWebVitals.js",[],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/libs/createInputTrack.js",[],"/Users/dev/Documents/stokkmaur/react-audio-mixer/src/hooks/useQueryParams.js",[],{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":5,"column":8,"nodeType":"236","messageId":"237","endLine":5,"endColumn":21},{"ruleId":"230","replacedBy":"238"},{"ruleId":"232","replacedBy":"239"},{"ruleId":"230","replacedBy":"240"},{"ruleId":"232","replacedBy":"241"},{"ruleId":"234","severity":1,"message":"242","line":1,"column":29,"nodeType":"236","messageId":"237","endLine":1,"endColumn":38},{"ruleId":"234","severity":1,"message":"243","line":1,"column":40,"nodeType":"236","messageId":"237","endLine":1,"endColumn":48},{"ruleId":"234","severity":1,"message":"244","line":5,"column":10,"nodeType":"236","messageId":"237","endLine":5,"endColumn":45},{"ruleId":"230","replacedBy":"245"},{"ruleId":"232","replacedBy":"246"},{"ruleId":"230","replacedBy":"247"},{"ruleId":"232","replacedBy":"248"},{"ruleId":"230","replacedBy":"249"},{"ruleId":"232","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":64,"column":6,"nodeType":"253","endLine":64,"endColumn":8,"suggestions":"254"},{"ruleId":"251","severity":1,"message":"255","line":53,"column":6,"nodeType":"253","endLine":53,"endColumn":8,"suggestions":"256"},{"ruleId":"230","replacedBy":"257"},{"ruleId":"232","replacedBy":"258"},{"ruleId":"251","severity":1,"message":"255","line":50,"column":6,"nodeType":"253","endLine":50,"endColumn":8,"suggestions":"259"},{"ruleId":"230","replacedBy":"260"},{"ruleId":"232","replacedBy":"261"},{"ruleId":"230","replacedBy":"262"},{"ruleId":"232","replacedBy":"263"},{"ruleId":"251","severity":1,"message":"255","line":50,"column":6,"nodeType":"253","endLine":50,"endColumn":8,"suggestions":"264"},{"ruleId":"234","severity":1,"message":"242","line":1,"column":29,"nodeType":"236","messageId":"237","endLine":1,"endColumn":38},{"ruleId":"230","replacedBy":"265"},{"ruleId":"232","replacedBy":"266"},{"ruleId":"230","replacedBy":"267"},{"ruleId":"232","replacedBy":"268"},{"ruleId":"230","replacedBy":"269"},{"ruleId":"232","replacedBy":"270"},{"ruleId":"234","severity":1,"message":"271","line":11,"column":35,"nodeType":"236","messageId":"237","endLine":11,"endColumn":44},{"ruleId":"234","severity":1,"message":"272","line":44,"column":16,"nodeType":"236","messageId":"237","endLine":44,"endColumn":23},{"ruleId":"251","severity":1,"message":"273","line":75,"column":6,"nodeType":"253","endLine":75,"endColumn":8,"suggestions":"274"},{"ruleId":"230","replacedBy":"275"},{"ruleId":"232","replacedBy":"276"},{"ruleId":"251","severity":1,"message":"255","line":53,"column":6,"nodeType":"253","endLine":53,"endColumn":8,"suggestions":"277"},{"ruleId":"230","replacedBy":"278"},{"ruleId":"232","replacedBy":"279"},{"ruleId":"230","replacedBy":"280"},{"ruleId":"232","replacedBy":"281"},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"no-unused-vars","'TestComponent' is defined but never used.","Identifier","unusedVar",["282"],["283"],["282"],["283"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'unstable_renderSubtreeIntoContainer' is defined but never used.",["282"],["283"],["282"],["283"],["282"],["283"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadAudio'. Either include it or remove the dependency array.","ArrayExpression",["284"],"React Hook useEffect has a missing dependency: 'animate'. Either include it or remove the dependency array.",["285"],["282"],["283"],["286"],["282"],["283"],["282"],["283"],["287"],["282"],["283"],["282"],["283"],["282"],["283"],"'exportWAV' is defined but never used.","'setSong' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'createInputNode', 'loadAudio', and 'tracks'. Either include them or remove the dependency array.",["288"],["282"],["283"],["289"],["282"],["283"],["282"],["283"],"no-global-assign","no-unsafe-negation",{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"292","fix":"294"},{"desc":"292","fix":"295"},{"desc":"296","fix":"297"},{"desc":"292","fix":"298"},"Update the dependencies array to be: [loadAudio]",{"range":"299","text":"300"},"Update the dependencies array to be: [animate]",{"range":"301","text":"302"},{"range":"303","text":"302"},{"range":"304","text":"302"},"Update the dependencies array to be: [createInputNode, loadAudio, tracks]",{"range":"305","text":"306"},{"range":"307","text":"302"},[2152,2154],"[loadAudio]",[1567,1569],"[animate]",[1546,1548],[1546,1548],[2342,2344],"[createInputNode, loadAudio, tracks]",[1567,1569]]