[{"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/reportWebVitals.js":"1","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/App.js":"2","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/index.js":"3","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Controls.js":"4","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Clock.js":"5","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/utils.js":"6","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/AudioAnalyser.js":"7","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/AudioVisualiser.js":"8","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Fader.js":"9","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Meter.js":"10","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Panner.js":"11","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Channel.js":"12","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Track.js":"13","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Mixer.js":"14","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/context/Audio.js":"15","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Home.js":"16","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Vu.js":"17","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/TestComponent.js":"18","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Loader.js":"19"},{"size":362,"mtime":1611525355760,"results":"20","hashOfConfig":"21"},{"size":832,"mtime":1612098203818,"results":"22","hashOfConfig":"21"},{"size":500,"mtime":1612028630362,"results":"23","hashOfConfig":"21"},{"size":718,"mtime":1612026739679,"results":"24","hashOfConfig":"21"},{"size":1212,"mtime":1611543945032,"results":"25","hashOfConfig":"21"},{"size":4068,"mtime":1612034640959,"results":"26","hashOfConfig":"21"},{"size":1101,"mtime":1611544801634,"results":"27","hashOfConfig":"21"},{"size":1111,"mtime":1611545277878,"results":"28","hashOfConfig":"21"},{"size":1243,"mtime":1612098765125,"results":"29","hashOfConfig":"21"},{"size":752,"mtime":1612101900935,"results":"30","hashOfConfig":"21"},{"size":2509,"mtime":1611609514698,"results":"31","hashOfConfig":"21"},{"size":1232,"mtime":1612104129662,"results":"32","hashOfConfig":"21"},{"size":273,"mtime":1612098192538,"results":"33","hashOfConfig":"21"},{"size":724,"mtime":1612094169275,"results":"34","hashOfConfig":"21"},{"size":4443,"mtime":1612104185063,"results":"35","hashOfConfig":"21"},{"size":1345,"mtime":1612029283124,"results":"36","hashOfConfig":"21"},{"size":2007,"mtime":1612096689887,"results":"37","hashOfConfig":"21"},{"size":1690,"mtime":1612091610273,"results":"38","hashOfConfig":"21"},{"size":211,"mtime":1612019178648,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"6ni04",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/reportWebVitals.js",[],["90","91"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/App.js",["92"],"import React from \"react\";\nimport Home from \"./components/Home\";\nimport AudioContextProvider from \"./context/Audio\";\n\nimport TestComponent from \"./components/TestComponent\";\n\nimport \"./fonts/digital-7.eot\";\nimport \"./fonts/digital-7.svg\";\nimport \"./fonts/digital-7.ttf\";\nimport \"./fonts/digital-7.woff\";\n\nimport \"./stylesheets/normalize.css\";\nimport \"./stylesheets/normalize-edit.css\";\nimport \"./stylesheets/fonts.css\";\nimport \"./stylesheets/loader.css\";\nimport \"./stylesheets/main.css\";\n\nconst App = () => {\n  return (\n    <>\n      <AudioContextProvider>\n        <div className=\"App\">\n          <header>\n            <h1>Stokkmaur</h1>\n          </header>\n          <Home />\n          {/* <TestComponent /> */}\n        </div>\n      </AudioContextProvider>\n      <div id=\"audio-container\"></div>\n    </>\n  );\n};\n\nexport default App;\n",["93","94"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/index.js",[],["95","96"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Controls.js",[],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Clock.js",[],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/utils.js",[],["97","98"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/AudioAnalyser.js",[],["99","100"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/AudioVisualiser.js",[],["101","102"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Fader.js",[],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Meter.js",["103"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Panner.js",["104"],"import React, { useState } from \"react\";\n\nimport { scale } from \"../utils\";\n\nconst Panner = () => {\n  const [pan, setPan] = useState(0);\n  const [pannerDeg, setPannerDeg] = useState(0);\n  const [pannerCanDrag, setPannerCanDrag] = useState(false);\n  const [dragState, setDragState] = useState({\n    width: null,\n    height: null,\n    offset: { left: null, top: null },\n    x: null,\n    y: null,\n  });\n\n  const handleDrag = (e) => {\n    if (!pannerCanDrag) {\n      return;\n    }\n\n    const touch = e.type === \"touchmove\" && e.originalEvent.changedTouches;\n    const top = touch && touch[0] ? touch[0].pageY : e.pageY;\n    const left = touch && touch[0] ? touch[0].pageX : e.pageX;\n    const a = dragState.offset.left + dragState.width / 2 - parseInt(left);\n    const b = dragState.offset.top + dragState.height / 2 - parseInt(top);\n    const deg = -1 * Math.atan2(a, b) * (180 / Math.PI);\n\n    if (deg >= -150 && deg <= 150) {\n      setPannerDeg(deg);\n      setPan(scale(deg, -150, 150, -1, 1));\n    }\n  };\n\n  const enableDrag = (e) => {\n    let newDragState = {};\n    const elem = e.target;\n    setPannerCanDrag(true);\n    newDragState.width = parseInt(elem.offsetWidth);\n    newDragState.height = parseInt(elem.offsetHeight);\n    newDragState.offset = {\n      top: parseInt(elem.getBoundingClientRect().top),\n      left: parseInt(elem.getBoundingClientRect().left),\n    };\n    if (e.type === \"touchstart\" && e.originalEvent.changedTouches) {\n      const touch = e.originalEvent.changedTouches[0];\n      newDragState.x = touch.pageX;\n      newDragState.y = touch.pageY;\n    } else {\n      newDragState.x = e.pageX;\n      newDragState.y = e.pageY;\n    }\n    setDragState(newDragState);\n  };\n\n  const disableDrag = () => {\n    if (pannerCanDrag) {\n      setPannerCanDrag(false);\n    }\n  };\n\n  const resetPanner = () => {\n    setPannerDeg(0);\n    setPan(0);\n  };\n\n  return (\n    <div className=\"pan\">\n      <div\n        className=\"panner\"\n        onMouseDown={enableDrag}\n        onTouchStart={enableDrag}\n        onDoubleClick={resetPanner}\n        onMouseUp={disableDrag}\n        onTouchEnd={disableDrag}\n        onTouchCancel={disableDrag}\n        // onMouseOut={disableDrag}\n        onMouseMove={(e) => handleDrag(e)}\n        style={{\n          WebkitTransform: `rotate(${pannerDeg}deg)`,\n          MozTransform: `rotate(${pannerDeg}deg)`,\n          transform: `rotate(${pannerDeg}deg)`,\n        }}\n      >\n        <div className=\"pan-indicator\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default Panner;\n","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Channel.js",[],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Track.js",[],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Mixer.js",[],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/context/Audio.js",[],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Home.js",["105"],"import React from \"react\";\n\nimport Mixer from \"./Mixer\";\nimport Controls from \"./Controls\";\n\nimport { AudioContext } from \"../context/Audio\";\n\nconst Home = () => {\n  // useEffect(() => {\n  //   audioContext.loadAudio();\n  // }, []);\n\n  ///// Microphone stuff /////\n\n  // const getMicrophone = async () => {\n  //   const audio = await navigator.mediaDevices.getUserMedia({\n  //     audio: true,\n  //     video: false,\n  //   });\n  //   setAudio(audio);\n  // };\n\n  // const stopMicrophone = () => {\n  //   audio.getTracks().forEach((track) => track.stop());\n  //   setAudio(null);\n  // };\n\n  // const toggleMicrophone = () => {\n  //   if (audio) {\n  //     stopMicrophone();\n  //   } else {\n  //     getMicrophone();\n  //   }\n  // };\n\n  ///// Microphone stuff /////\n\n  return (\n    <>\n      {/* <button onClick={toggleMicrophone}>\n        {audio ? \"Stop microphone\" : \"Get microphone input\"}\n      </button>\n      {audio ? (\n        <div\n          style={{\n            display: \"grid\",\n            margin: \"0\",\n            padding: \"0\",\n            background: \"#333e5a\",\n          }}\n        >\n          <div style={{ minHeight: \"80vh\", background: \"#fff\" }}>\n            <AudioAnalyser audio={audio} />\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )} */}\n\n      <Mixer />\n      <Controls />\n    </>\n  );\n};\n\nexport default Home;\n","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Vu.js",["106"],"import React, { useContext, useState, useRef, useEffect } from \"react\";\nimport { AudioContext } from \"../context/Audio\";\nimport { dBFSCalc, scale } from \"../utils\";\n\nconst nodeMap = {\n  left: \"analyserNodeL\",\n  right: \"analyserNodeR\",\n};\n\nconst Vu = (props) => {\n  const analyserNodeName = nodeMap[props.channel];\n  const [deg, setDeg] = useState(0);\n  const animationRef = useRef(null);\n  const audioContext = useContext(AudioContext);\n  const masterTrack = audioContext.getMasterTrack();\n  const bufferLength = masterTrack[analyserNodeName].fftSize;\n  const animationData = useRef(new Uint8Array(bufferLength));\n  let vuData = [];\n\n  const animate = () => {\n    const len = animationData.current.length;\n    let newDbfs = new Array(len);\n\n    masterTrack[analyserNodeName].getByteTimeDomainData(animationData.current);\n\n    for (let i = 0; i < len; ++i) {\n      newDbfs[i] = (animationData.current[i] * 2) / 255 - 1;\n    }\n\n    // TODO: set to -192 if not playing, could not get playing state from context here, it was always false\n    newDbfs = dBFSCalc(newDbfs);\n    let newDeg = Math.max(-20, scale(newDbfs + 20, -20, 0, 0, 60));\n\n    vuData.unshift(newDeg);\n\n    if (vuData.length >= 18) {\n      vuData.length = 18;\n    }\n\n    newDeg =\n      vuData.reduce((sum, curr) => {\n        return sum + curr;\n      }, 0) / vuData.length;\n\n    setDeg(newDeg);\n\n    animationRef.current = requestAnimationFrame(animate);\n  };\n\n  useEffect(() => {\n    animationRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(animationRef.current);\n  }, []);\n\n  return (\n    <div className=\"vu\">\n      <div className=\"mask\">\n        <div\n          className={`needle ${props.channel}`}\n          style={{\n            WebkitTransform: `rotate(${deg}deg)`,\n            MozTransform: `rotate(${deg}deg)`,\n            transform: `rotate(${deg}deg)`,\n          }}\n        ></div>\n      </div>\n      <p className=\"vu-label\">{props.channel[0].toUpperCase()}</p>\n    </div>\n  );\n};\n\nexport default Vu;\n",["107","108"],"/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/TestComponent.js",["109"],"import React, { useContext, useRef, useEffect } from \"react\";\n\nimport { AudioContext } from \"../context/Audio\";\n\nconst TestComponent = () => {\n  const audioContext = useContext(AudioContext);\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const masterTrack = audioContext.getMasterTrack();\n  const bufferLength = masterTrack.analyserNodeL.fftSize;\n  const animationData = useRef(new Uint8Array(bufferLength));\n\n  // TODO: start / stop animation with audio start / stop if that is necessary for performance\n  const animate = () => {\n    const width = 200;\n    const height = 200;\n    const canvas = canvasRef.current;\n    const canvasCtx = canvas.getContext(\"2d\");\n\n    masterTrack.analyserNodeL.getByteTimeDomainData(animationData.current);\n\n    canvasCtx.fillStyle = \"rgb(200, 200, 200)\";\n    canvasCtx.fillRect(0, 0, width, height);\n\n    canvasCtx.lineWidth = 2;\n    canvasCtx.strokeStyle = \"rgb(0, 0, 0)\";\n\n    const sliceWidth = (width * 1.0) / bufferLength;\n    let x = 0;\n\n    canvasCtx.beginPath();\n    for (var i = 0; i < bufferLength; i++) {\n      const v = animationData.current[i] / 128.0;\n      const y = (v * height) / 2;\n\n      if (i === 0) canvasCtx.moveTo(x, y);\n      else canvasCtx.lineTo(x, y);\n\n      x += sliceWidth;\n    }\n\n    canvasCtx.lineTo(width, height / 2);\n    canvasCtx.stroke();\n    animationRef.current = requestAnimationFrame(animate);\n  };\n\n  useEffect(() => {\n    animationRef.current = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(animationRef.current);\n  }, []);\n\n  return (\n    <div style={{ color: \"white\" }}>\n      <canvas ref={canvasRef}></canvas>\n    </div>\n  );\n};\n\nexport default TestComponent;\n","/Users/jonasbarsten/Documents/React/react-audio-mixer/src/components/Loader.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":5,"column":8,"nodeType":"116","messageId":"117","endLine":5,"endColumn":21},{"ruleId":"110","replacedBy":"118"},{"ruleId":"112","replacedBy":"119"},{"ruleId":"110","replacedBy":"120"},{"ruleId":"112","replacedBy":"121"},{"ruleId":"110","replacedBy":"122"},{"ruleId":"112","replacedBy":"123"},{"ruleId":"110","replacedBy":"124"},{"ruleId":"112","replacedBy":"125"},{"ruleId":"110","replacedBy":"126"},{"ruleId":"112","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":17,"column":6,"nodeType":"130","endLine":17,"endColumn":8,"suggestions":"131"},{"ruleId":"114","severity":1,"message":"132","line":6,"column":10,"nodeType":"116","messageId":"117","endLine":6,"endColumn":13},{"ruleId":"114","severity":1,"message":"133","line":6,"column":10,"nodeType":"116","messageId":"117","endLine":6,"endColumn":22},{"ruleId":"128","severity":1,"message":"134","line":53,"column":6,"nodeType":"130","endLine":53,"endColumn":8,"suggestions":"135"},{"ruleId":"110","replacedBy":"136"},{"ruleId":"112","replacedBy":"137"},{"ruleId":"128","severity":1,"message":"134","line":50,"column":6,"nodeType":"130","endLine":50,"endColumn":8,"suggestions":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'TestComponent' is defined but never used.","Identifier","unusedVar",["139"],["140"],["139"],["140"],["139"],["140"],["139"],["140"],["139"],["140"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'audioContext' and 'props.gainNode'. Either include them or remove the dependency array.","ArrayExpression",["141"],"'pan' is assigned a value but never used.","'AudioContext' is defined but never used.","React Hook useEffect has a missing dependency: 'animate'. Either include it or remove the dependency array.",["142"],["139"],["140"],["143"],"no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"146","fix":"148"},"Update the dependencies array to be: [audioContext, props.gainNode]",{"range":"149","text":"150"},"Update the dependencies array to be: [animate]",{"range":"151","text":"152"},{"range":"153","text":"152"},[524,526],"[audioContext, props.gainNode]",[1567,1569],"[animate]",[1546,1548]]